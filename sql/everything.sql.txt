/*
 ----------------------------
iv-first-draft.sql

First draft of SQL tables for
Intervention Tracking app.

Only works with SQL server
right now....
 ----------------------------
 */
USE master;
GO

/*Create the database if at all possible*/
IF EXISTS ( SELECT * FROM master.dbo.sysdatabases WHERE name = N'Iv_Tracker_Db')
BEGIN
	DROP DATABASE Iv_Tracker_Db;
	/*Close connections?*/
END

/*
 ----------------------------
Create a user specifically for
this app.

The user can update, delete
and read from tables.
 ----------------------------
  */
IF EXISTS ( SELECT * FROM sys.database_principals WHERE name = N'megadeth_waffle')
BEGIN
	DROP LOGIN megadeth_waffle;
	DROP USER megadeth_waffle;
END

CREATE DATABASE Iv_Tracker_Db;
Use Iv_Tracker_Db;
GO

DROP LOGIN megadeth_waffle;
CREATE LOGIN megadeth_waffle WITH PASSWORD = 'm3gad3th_w4ffle$!';
CREATE USER megadeth_waffle FOR LOGIN megadeth_waffle;
ALTER DATABASE Iv_Tracker_Db SET TRUSTWORTHY ON;
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE, EXECUTE ON DATABASE::Iv_Tracker_Db TO [megadeth_waffle] WITH GRANT OPTION;


/*
 ----------------------------
ac_mtr_participants

A list of the participants (probably coming from somewhere else, but plug this in later)
This is looped through when building a list of participants to search through.
 ----------------------------
 */
IF OBJECT_ID( N'ac_mtr_participants', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_participants;
END
CREATE TABLE ac_mtr_participants 
(
participant_id int 
,participant_other_id varchar(64)
,participant_fname varchar(256)
,participant_mname varchar(256)
,participant_lname varchar(256)
,participant_age varchar(64)
,participant_randomization_string varchar(256)
,participant_date_of_randomization datetime
,participant_date_added datetime
,participant_date_modified datetime
,participant_avatar varchar(2048)
,participant_notes varchar(max)
,participant_initial_weight varchar(max)
,participant_initial_height varchar(max)
);

/*
 ----------------------------
ac_mtr_exercisetypes

Different exercises can go 
here, depending on whether
or not we want to maintain
them here or in the app.
 ----------------------------
 */
IF OBJECT_ID( N'ac_mtr_exercisetypes', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_exercisetypes;
END
CREATE TABLE ac_mtr_exercisetypes 
(
et_id int
,et_name varchar(256)
,et_description varchar(max)
);

/*
 ----------------------------
app_activity_log

Log application activity :)
 ----------------------------
*/


/*
 ----------------------------
ac_mtr_dlog

Daily log entries.

dlog_id										Unique ID of the log entry 
dlog_participant_id				Who does it belong to?
dlog_exercise_id int 			Unique ID of the exercise done
dlog_exercise_type int	  Which type of exercise is it?
dlog_date_time_completed  When was it completed? 
dlog_notes varchar(max)		Any special notes about this log entry?
dlog_difficulty int				?
 ----------------------------
 */
IF OBJECT_ID( N'ac_mtr_dlog', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_dlog;
END
CREATE TABLE ac_mtr_dlog (
dlog_id int
,dlog_participant_id int
,dlog_exercise_id int
,dlog_exercise_type int
,dlog_length int
,dlog_date_time_completed datetime
,dlog_notes varchar(max)
,dlog_difficulty int
);


/*
 ----------------------------
ac_mtr_log_strength

Logs data specific to the 
strength study.
 
id 					an identifier
,set_index int - which number set is this?
,repetitions int - how many repetitions were part of this set
,weight_used int - how much weight was used
,notes varchar(max)  - anything of note happen?

ls_id                   Unique ID of this particular exercise
ls_parent_id            Parent is the dlog_id
ls_set_index            Strength training usually involves sets, so log the number here 
ls_repetitions          How many repetitions did the participant do?
ls_weight_used_lbs      How heavy (in lbs)
ls_weight_used_kgs      How heavy (in kgs)
ls_notes                Notes?  (a little excessive, but nobody cares)
 ----------------------------
*/
IF OBJECT_ID( N'ac_mtr_log_strength', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_log_strength;
END
CREATE TABLE ac_mtr_log_strength (
ls_id int
,ls_parent_id int
,ls_set_index int
,ls_repetitions int
,ls_weight_used_lbs int
,ls_weight_used_kgs int
,ls_notes varchar(max) 
)


/*
 ----------------------------
ac_mtr_log_control

Logs data specific to the 
control group.

What condition is the patient
in during the visit?

lc_id            Log control ID
lc_parent_id     Parent study
lc_misc          ?
lc_notes         ?
 ----------------------------
 */
IF OBJECT_ID( N'ac_mtr_log_control', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_log_control;
END
CREATE TABLE ac_mtr_log_control (
lcc_id int
,lcc_parent_id int
,lcc_misc varchar(256)
,lcc_notes varchar(max) 
)



/*
 ----------------------------
ac_mtr_log_cardio

Logs data specific to the 
cardio group.

lc_id                 Unique
lc_type               Which type of cardio was used? (another table for this)
lc_type_other         Could be a totally different type of cardio
lc_set_index          ?
lc_length_of_set      Length that exercise was done
lc_resistance_used    ?
lc_notes              notes...
 ----------------------------
 */
IF OBJECT_ID( N'ac_mtr_log_cardio', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_log_cardio;
END
CREATE TABLE ac_mtr_log_cardio (
lc_id int
,lc_type int
,lc_type_other varchar(256) 
,lc_set_index int
,lc_length_of_set int
,lc_resistance_used int
,lc_notes varchar(max) 
)



/*
 ----------------------------
ac_mtr_patientstatus

What condition is the patient
in during the visit?

ps_id                 Unique
ps_before             Was this done before or after the exercises?
ps_weight             How heavy is patient at start?
ps_height             How tall is patient at start?
ps_fatigue            Approximate statement concerning the person's energy level
ps_vision             ...?
ps_stool              ...?
ps_hunger             ...?
ps_date_time_assessed When was the person assessed
ps_notes              notes...
 ----------------------------
 */
IF OBJECT_ID( N'ac_mtr_patientstatus', N'U') IS NOT NULL
BEGIN
	DROP TABLE ac_mtr_patientstatus;
END
CREATE TABLE ac_mtr_patientstatus (
ps_id int
,ps_before bit
,ps_weight int
,ps_height int
,ps_fatigue int
,ps_vision int
,ps_stool int
,ps_hunger int
,ps_date_time_assessed datetime
,ps_notes varchar(max)
);


